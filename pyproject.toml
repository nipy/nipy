[project]
name = "nipy"
dynamic = ['version']
license = {file = "LICENSE"}
requires-python = ">=3.8"
description  = 'A python package for analysis of neuroimaging data'
readme = 'README.rst'
classifiers = ["Development Status :: 3 - Alpha",
               "Environment :: Console",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: BSD License",
               "Operating System :: OS Independent",
               "Programming Language :: Python :: 3.8",
               "Programming Language :: Python :: 3.9",
               "Programming Language :: Python :: 3.10",
               "Programming Language :: Python :: 3.11",
               "Programming Language :: Python :: 3.12",
               "Programming Language :: Python :: 3.13",
               "Topic :: Scientific/Engineering"]
dependencies = [
    'numpy>=1.22',
    'scipy>=1.8',
    'nibabel>=3.2',
    'sympy>=1.9',
    'transforms3d'
]

[[project.maintainers]]
name = 'nipy developers'
email = 'neuroimaging@python.org'

[project.urls]
Homepage = 'https://nipy.org/nipy'
Documentation = 'http://nipy.org/nipy/documentation.html'
Source = 'https://github.com/nipy/nipy'
Download = 'https://pypi.org/project/nipy/#files'
Tracker = 'https://github.com/nipy/nipy/issues'

[project.optional-dependencies]
developer = [
    'pre-commit',
    'rtoml',
]
docs = [
    'sphinx>=7.0',
    'numpydoc>=1.6.0',
    'matplotlib',
    'texext',
    'ipython'
]
optional = [
    'matplotlib>=3',
]
test = [
    'matplotlib>=3',
    'pytest>=7.2',
    'pytest-cov>=4.0',
    'pytest-doctestplus'
]

[build-system]
build-backend = "mesonpy"
requires = [
  "meson-python>=0.13",
  "ninja",
  "setuptools",
  "cython>=3",
  # From Numpy 1.25, Numpy is always backwards compatible for any given Python
  # version.  See:
  # https://numpy.org/doc/stable/release/1.25.0-notes.html#compiling-against-the-numpy-c-api-is-now-backwards-compatible-by-default
  "numpy>=1.25; python_version > '3.8'",
  # SPEC0-minimum as of Dec 23, 2023
  "numpy==1.22; python_version <= '3.8'",
]

[project.scripts]
nipy_3dto4d = 'nipy.cli.img3dto4d:main'
nipy_4dto3d = 'nipy.cli.img4dto3d:main'
nipy_4d_realign = 'nipy.cli.realign4d:main'
nipy_tsdiffana = 'nipy.cli.tsdiffana:main'
nipy_diagnose = 'nipy.cli.diagnose:main'

[tool.ruff]
line-length = 88

[tool.ruff.lint]
extend-select = [
    'I',
    'UP',
    'C4',
    'PIE',
    'PGH',
    'PLR0402',
    'SIM',
    'PERF',
    'RUF'
]
ignore = [
    'F401',
    'F402',
    'F403',
    'F821',
    'F841',
    'E402',
    'E712',
    'E721',
    'E722',
    'E731',
    'E741',
    'E742',
    'UP031',
    'SIM102',
    'SIM105',
    'SIM108',
    'SIM114',
    'SIM115',
    'SIM300',
    'PERF203',
    'RUF005',
    'RUF012',
    'RUF015'
]

[tool.spin]
package = 'nipy'

[tool.spin.commands]
Build = [
    'spin.cmds.meson.build',
    'spin.cmds.meson.test',
    'spin.cmds.pip.install'
]
Environments = [
    'spin.cmds.meson.ipython',
    'spin.cmds.meson.python',
    'spin.cmds.meson.run'
]
Debug = [
    'spin.cmds.meson.gdb',
    'spin.cmds.meson.lldb'
]
